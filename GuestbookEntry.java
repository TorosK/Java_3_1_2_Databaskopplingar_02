/**
 * The {@code GuestbookEntry} class represents a single entry in the guestbook.
 * It encapsulates details of a guestbook entry such as name, email, website, and comment.
 * This class provides constructors for creating instances both with and without an entry ID,
 * assuming the ID is auto-generated by the database when not provided.
 */
public class GuestbookEntry {
    private int id; // Unique identifier for the guestbook entry
    private String name; // Name of the person making the guestbook entry
    private String email; // Email address of the person making the entry
    private String website; // Website URL provided by the person making the entry, optional
    private String comment; // The comment/message left by the person in the guestbook

    /**
     * Constructs a new {@code GuestbookEntry} with specified name, email, website, and comment.
     * This constructor is typically used when creating a new entry where the ID is not yet assigned.
     * 
     * @param name    The name of the person making the entry.
     * @param email   The email address of the person making the entry.
     * @param website The website URL provided by the person, may be {@code null} if not provided.
     * @param comment The comment or message left in the guestbook.
     */
    public GuestbookEntry(String name, String email, String website, String comment) {
        this.name = name;
        this.email = email;
        this.website = website;
        this.comment = comment;
    }

    /**
     * Constructs a new {@code GuestbookEntry} with specified ID, name, email, website, and comment.
     * This constructor is typically used when retrieving an existing entry from the database,
     * where the entry already has an assigned ID.
     * 
     * @param id      The unique identifier for the guestbook entry.
     * @param name    The name of the person making the entry.
     * @param email   The email address of the person making the entry.
     * @param website The website URL provided by the person, may be {@code null} if not provided.
     * @param comment The comment or message left in the guestbook.
     */
    public GuestbookEntry(int id, String name, String email, String website, String comment) {
        this.id = id;
        this.name = name;
        this.email = email;
        this.website = website;
        this.comment = comment;
    }

    /**
     * Default no-argument constructor for {@code GuestbookEntry}.
     * Can be used to create an instance of {@code GuestbookEntry} without setting field values initially.
     */
    public GuestbookEntry() {
        // Intentionally left blank for flexibility in instantiation
    }

    // Getters and Setters with JavaDoc

    /**
     * Returns the unique identifier for this guestbook entry.
     * 
     * @return The ID of this entry.
     */
    public int getId() {
        return id;
    }

    /**
     * Sets the unique identifier for this guestbook entry.
     * 
     * @param id The ID to set for this entry.
     */
    public void setId(int id) {
        this.id = id;
    }

    /**
     * Returns the name of the person who made this guestbook entry.
     * 
     * @return The name of the person.
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the name of the person who made this guestbook entry.
     * 
     * @param name The name to set for this entry.
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Returns the email address of the person who made this guestbook entry.
     * 
     * @return The email address of the person.
     */
    public String getEmail() {
        return email;
    }

    /**
     * Sets the email address of the person who made this guestbook entry.
     * 
     * @param email The email address to set for this entry.
     */
    public void setEmail(String email) {
        this.email = email;
    }

    /**
     * Returns the website URL provided by the person who made this guestbook entry.
     * 
     * @return The website URL, or {@code null} if not provided.
     */
    public String getWebsite() {
        return website;
    }

    /**
     * Sets the website URL for this guestbook entry.
     * 
     * @param website The website URL to set, may be {@code null} if not provided.
     */
    public void setWebsite(String website) {
        this.website = website;
    }

    /**
     * Returns the comment or message left by the person in this guestbook entry.
     * 
     * @return The comment or message.
     */
    public String getComment() {
        return comment;
    }

    /**
     * Sets the comment or message for this guestbook entry.
     * 
     * @param comment The comment or message to set.
     */
    public void setComment(String comment) {
        this.comment = comment;
    }
}